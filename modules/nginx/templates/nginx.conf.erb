worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include            mime.types;
    default_type       application/octet-stream;
    sendfile           on;
    keepalive_timeout  65;

    lua_package_path "/usr/local/nginx/lua-resty-redis/lib/?.lua;;";

    server {
        listen       80;
        server_name  localhost;
        location / {
            default_type 'text/plain';
            content_by_lua '
                local redis = require "resty.redis"
                local red   = redis:new()
                red:set_timeout(1000) -- 1 sec

                local ok, err = red:connect("127.0.0.1", 6379)
                if not ok then
                    ngx.say("failed to connect: ", err)
                    return
                end
                
                ok, err = red:set("dog", "an animal")
                if not ok then
                    ngx.say("failed to set dog: ", err)
                    return
                end
                
                ngx.say("set result: ", ok)
                
                local res, err = red:get("dog")
                if not res then
                    ngx.say("failed to get dog: ", err)
                    return
                end
                
                red:init_pipeline()
                red:set("cat", "Marry")
                red:set("horse", "Bob")
                red:get("cat")
                red:get("horse")
                local results, err = red:commit_pipeline()
                if not results then
                    ngx.say("failed to commit the pipelined requests: ", err)
                    return
                end

                red:incr("counter")
                
                ngx.say("dog: ", res)
                ngx.say("Hello, World! ", res)
            ';
        }
    }
}

